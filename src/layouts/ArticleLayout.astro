---
import '@styles/code.scss';
// types
import type { MarkdownLayoutProps } from 'astro';
interface Props extends MarkdownLayoutProps<ArticleFrontmatter> {}
// layouts
import BaseLayout from './BaseLayout.astro';
// components
import TableOfContents from '@components/TableOfContents.svelte';
// icons
import ChevronRightLine from '@lib/icons/line/ChevronRightLine.svelte';
// lib
import { formatToDate } from '@lib/datetime';
// props
const { frontmatter, url, headings } = Astro.props;
// state
const seoMetadata: SeoMetadata = {
	title: frontmatter.title,
	description: frontmatter.description
};

const schema = JSON.stringify({
	'@context': 'http://schema.org',
	'@graph': [
		{
			'@type': 'WebSite',
			name: 'Shindra David',
			url: Astro.site
		},
		{
			'@type': 'BreadcrumbList',
			itemListElement: [
				{
					'@type': 'ListItem',
					position: 1,
					item: {
						'@id': Astro.site,
						name: 'Home'
					}
				},
				{
					'@type': 'ListItem',
					position: 2,
					item: {
						'@id': new URL('/blog', Astro.site),
						name: 'Blog'
					}
				},
				{
					'@type': 'ListItem',
					position: 3,
					item: {
						'@id': new URL(url ? url : '', Astro.site),
						name: frontmatter.title
					}
				}
			]
		}
	]
});
---

<BaseLayout {...seoMetadata} schema={schema}>
	<main>
		<article itemscope itemtype="https://schema.org/Article" class="article">
			<header class="article__header">
				<ul aria-label="breadcrumbs" class="breadcrumbs">
					<li><a href="/">Home</a><ChevronRightLine /></li>
					<li><a href="/blog">Blog</a><ChevronRightLine /></li>
					<li><a href={url} aria-current="page">{frontmatter.title}</a></li>
				</ul>
				<h1 itemprop="name headline" class="title">{frontmatter.title}</h1>
				<p class="published-on">
					Published on
					<time itemprop="datePublished" datetime={frontmatter.publishedOn}>
						{formatToDate(frontmatter.publishedOn)}
					</time>
				</p>
				<ul aria-label="article tags" class="tags">
					{
						frontmatter.tags
							.slice(0, 3)
							.map((tag) => <li class:list={[`tag tag-${tag}`]}>{tag}</li>)
					}
				</ul>
			</header>
			<section itemprop="articleBody">
				<slot />
			</section>
		</article>
		<aside>
			<nav aria-labelledby="toc-heading">
				<h2 id="toc-heading">In this article</h2>
				<TableOfContents headings={headings} client:load />
			</nav>
		</aside>
	</main>
</BaseLayout>

<style lang="scss">
	@use 'src/styles/abstracts/mixins' as *;
	@use 'src/styles/abstracts/pallette' as *;
	@use 'src/styles/abstracts/variables' as *;

	main {
		display: grid;
		grid-template-areas: 'article aside';
		grid-template-columns: 2fr 1fr;

		article {
			grid-area: article;
		}

		aside {
			grid-area: aside;
			height: 100vh;
			position: sticky;
			top: 0;
		}
	}

	h1 {
		text-transform: uppercase;
	}
</style>
